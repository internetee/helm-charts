apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.status }}-{{ .Values.reference }}-{{ include "registry_admin.name" . }}
  labels:
    {{- include "registry_admin.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "registry_admin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "registry_admin.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      serviceAccountName: {{ include "registry_admin.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          tty: true
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if eq .Values.env "st" }}
            - name: APP_NAME
              value: {{ .Values.reference }}-st-admin
            - name: REG_API_BASE_URL
              value: {{include "staging.url" .}}
            {{- end }}
            - name: RAILS_ENV
              value: {{ .Values.environment }}
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: redis-url
                  key: REDIS_URL
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: reg-admin-key-base
                  key: SECRET_KEY_BASE
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command:
            - bash
            - -c
            - "bundle exec rails server -b 0.0.0.0"
          volumeMounts:
          - name: application-conf
            mountPath: "/opt/webapps/app/config/application.yml"
            subPath: "application.yml"
            readOnly: true
          - name: database-config
            mountPath: "/opt/webapps/app/config/database.yml"
            subPath: "database.yml"
            readOnly: true
          - name: openssl-config
            mountPath: "/opt/config/openssl.conf"
            subPath: "openssl.conf"
          - name: crl
            mountPath: "/opt/ca/crl/crl.pem"
            subPath: "crl.pem"
          - name: ca-crt
            mountPath: "/opt/ca/certs/ca.crt.pem"
            subPath: "ca.crt.pem"
          - name: ca-key
            mountPath: "/opt/ca/private/ca.key.pem"
            subPath: "ca.key.pem"
      volumes:
        - name: application-conf
          configMap:
            name: {{ .Values.configmap.application }}
        - name: database-config
          configMap:
            name: {{ .Values.configmap.database }}
        - name: openssl-config
          configMap:
            name: {{ .Values.configmap.openssl_config }}
        - name: crl
          secret:
            secretName: {{ .Values.secret.crl }}
        - name: ca-crt
          secret:
            secretName: {{ .Values.secret.ca_crt }}
        - name: ca-key
          secret:
            secretName: {{ .Values.secret.ca_key }}
            