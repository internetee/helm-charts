apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "whois.fullname" . }}
  labels:
    {{- include "whois.labels" . | nindent 4 }}
    app: whois
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "whois.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "whois.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      containers:
        - name: {{ .Chart.Name }}
          tty: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: APP_DBHOST
              value: whois-db-postgresql
            - name: WHOIS_ENV
              value: staging
          ports:
            - name: whois
              containerPort: 43
              protocol: TCP
          ## TODO define probes. The none http kind
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          readinessProbe:
            tcpSocket:
              port: 43
            initialDelaySeconds: 10
            periodSeconds: 10
          command:
            - ruby
            - whois.rb
            - run
          volumeMounts:
          - name: database-config
            mountPath: "/opt/webapps/app/config/database.yml"
            subPath: "database.yml"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: database-config
          configMap: 
            name: {{ .Values.configmap.database }}
