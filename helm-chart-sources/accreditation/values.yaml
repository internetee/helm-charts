# Default values for accreditation-center.
# This is a YAML-formatted file.

replicaCount: 1

image:
  repository: ghcr.io/internetee/accreditation_center
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# secret name for pulling image from private repository
imagePullSecrets: regcred-eisbot
nameOverride: "accreditation"
fullnameOverride: "accreditation-st"
# status of the installation, default st - staging
status: st
# base url, used to compine urls for different envirs
baseUrl: pilv.tld.ee
# Pullrequest reference. Used to create url for staging envir. Type shuld be int.
reference: "0000"
# database host
# dbHost: accreditation-db-postgresql
dbHost: accreditation-db-postgresql.accreditation.svc.cluster.local
# name of configmap for database config file location
dbConfig: st-accreditation-db-config
# Rails env name
railsEnv: staging
# name of configmap for static content nginx servers config
staticConfig: st-accreditation-static-config
# apm server url
apmUrl: "http://apm-server-apm-server.apm.svc.cluster.local:8200"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

# host name
host: rp-st-auction.infra.tld.ee
tls:
  # secret containing tls certificate and key
  secretName: st-accreditation-cert

ingress:
  enabled: true
  annonitations: {}

bot:
  # certs for bot to create repp queries.
  certificates: bot-certs

resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
